{"ast":null,"code":"/* inseÃ±amos el tiempo */\nvar showColon = 0;\nexport function getCurrentDateTime() {\n  let resTime = '';\n  let currentDate = new Date();\n  let hours = currentDate.getHours().toString().padStart(2, '0');\n  let minutes = currentDate.getMinutes().toString().padStart(2, '0');\n  let seconds = currentDate.getSeconds().toString().padStart(2, '0');\n  let day = currentDate.getDate().toString().padStart(2, '0');\n  // let mes = meses[currentDate.getMonth()];\n  let mes = currentDate.getMonth().toString().padStart(2, '0');\n  let stringTimeColon = hours + '<span>:<span>' + minutes;\n  let stringWithOutColon = hours + '<span style=\"color:white;\">:</span>' + minutes;\n  if (showColon == 0) {\n    resTime = stringTimeColon;\n    showColon = 1;\n  } else {\n    resTime = stringWithOutColon;\n    showColon = 0;\n  }\n  document.getElementById('spanDate').innerText = ' ' + day + '/' + mes;\n  document.getElementById('spanTime').innerHTML = resTime;\n  return {\n    date: ' ' + day + '/' + mes,\n    time: resTime\n  };\n}","map":{"version":3,"names":["showColon","getCurrentDateTime","resTime","currentDate","Date","hours","getHours","toString","padStart","minutes","getMinutes","seconds","getSeconds","day","getDate","mes","getMonth","stringTimeColon","stringWithOutColon","document","getElementById","innerText","innerHTML","date","time"],"sources":["D:/Indicadores-produccion/my-app/src/vars/time5.js"],"sourcesContent":["\r\n/* inseÃ±amos el tiempo */\r\nvar showColon = 0;\r\nexport function getCurrentDateTime() {\r\n    let resTime   = '';\r\n    let currentDate = new Date();\r\n    let hours = currentDate.getHours().toString().padStart(2, '0');\r\n    let minutes = currentDate.getMinutes().toString().padStart(2, '0');\r\n    let seconds = currentDate.getSeconds().toString().padStart(2, '0');\r\n    let day = currentDate.getDate().toString().padStart(2, '0');\r\n    // let mes = meses[currentDate.getMonth()];\r\n    let mes = currentDate.getMonth().toString().padStart(2, '0');\r\n    let stringTimeColon = hours+'<span>:<span>'+minutes; \r\n    let stringWithOutColon = hours+'<span style=\"color:white;\">:</span>'+minutes;\r\n    if(showColon == 0) { resTime = stringTimeColon; showColon = 1;\r\n    } else { resTime = stringWithOutColon; showColon = 0; }\r\n    document.getElementById('spanDate').innerText = ' '+day+'/'+mes;\r\n    document.getElementById('spanTime').innerHTML = resTime;\r\n    return {date:' '+day+'/'+mes, time: resTime}\r\n}"],"mappings":"AACA;AACA,IAAIA,SAAS,GAAG,CAAC;AACjB,OAAO,SAASC,kBAAkBA,CAAA,EAAG;EACjC,IAAIC,OAAO,GAAK,EAAE;EAClB,IAAIC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC5B,IAAIC,KAAK,GAAGF,WAAW,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC9D,IAAIC,OAAO,GAAGN,WAAW,CAACO,UAAU,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAClE,IAAIG,OAAO,GAAGR,WAAW,CAACS,UAAU,CAAC,CAAC,CAACL,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAClE,IAAIK,GAAG,GAAGV,WAAW,CAACW,OAAO,CAAC,CAAC,CAACP,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC3D;EACA,IAAIO,GAAG,GAAGZ,WAAW,CAACa,QAAQ,CAAC,CAAC,CAACT,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC5D,IAAIS,eAAe,GAAGZ,KAAK,GAAC,eAAe,GAACI,OAAO;EACnD,IAAIS,kBAAkB,GAAGb,KAAK,GAAC,qCAAqC,GAACI,OAAO;EAC5E,IAAGT,SAAS,IAAI,CAAC,EAAE;IAAEE,OAAO,GAAGe,eAAe;IAAEjB,SAAS,GAAG,CAAC;EAC7D,CAAC,MAAM;IAAEE,OAAO,GAAGgB,kBAAkB;IAAElB,SAAS,GAAG,CAAC;EAAE;EACtDmB,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,SAAS,GAAG,GAAG,GAACR,GAAG,GAAC,GAAG,GAACE,GAAG;EAC/DI,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACE,SAAS,GAAGpB,OAAO;EACvD,OAAO;IAACqB,IAAI,EAAC,GAAG,GAACV,GAAG,GAAC,GAAG,GAACE,GAAG;IAAES,IAAI,EAAEtB;EAAO,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}